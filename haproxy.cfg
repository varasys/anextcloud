global
	log /dev/log local0
	chroot /var/lib/haproxy
	stats socket /run/haproxy/admin.sock mode 660 level admin expose-fd listeners
	stats timeout 30s
	user haproxy
	group haproxy

defaults
	log global
	timeout connect 5s
	timeout client  50s
	timeout server  50s

frontend fe_http
	bind :80
	mode tcp
	# option forwardfor

	# acl acme_challenge path_beg -i /.well-known/acme-challenge
	# http-request redirect scheme https code 301 unless acme_challenge

	# use_backend %[req.hdr(Host),lower,concat(.http)]
	use_backend %[req.hdr(Host),lower]

frontend fe_https
	bind :443
	mode tcp
	tcp-request inspect-delay 5s
	tcp-request content accept if { req_ssl_hello_type 1 }

	# use_backend %[req_ssl_sni,lower,concat(.https)]
	use_backend %[req_ssl_sni,lower]

backend cloud.varasys.io
	mode tcp
	option ssl-hello-chk

	acl is_https ssl_fc

	use-server cloud.varasys.io.https if is_https
	use-server cloud.varasys.io.http if ! is_https

	server cloud.varasys.io.https /cloud.varasys.io/https.sock send-proxy-v2 check
	server cloud.varasys.io.http /cloud.varasys.io/http.sock send-proxy check

backend nextcloud.varasys.io
	mode tcp
	option ssl-hello-chk

	# server nextcloud /nextcloud.varasys.io/https.sock send-proxy-v2 check
	acl is_https ssl_fc

	use-server nextcloud.varasys.io.https if is_https
	use-server nextcloud.varasys.io.http if ! is_https

	server nextcloud.varasys.io.https /nextcloud.varasys.io/https.sock send-proxy-v2 check
	server nextcloud.varasys.io.http /nextcloud.varasys.io/http.sock send-proxy check

